{
    "elements": [
        { "data": { "id": "root", "title": "Azure", "description": "Azure cloud provider", "command": "", "reference": "", "category": true, "ifSuccussed": "" }, "classes": "node-attacker" },
        { "data": { "id": "usernamePassword", "title": "Valid Credentials", "description": "Use username and password for authentication", "command": "", "reference": "", "category": true, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "id": "looting", "title": "Looting", "description": "Explore looting techniques", "command": "", "reference": "", "category": true, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "id": "portals", "title": "Portals", "description": "Explore portal access techniques", "command": "", "reference": "", "category": true, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "id": "reconnaissance", "title": "Reconnaissance", "description": "Perform reconnaissance activities", "command": "", "reference": "", "category": true, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "id": "securityFeature", "title": "Security Feature", "description": "Analyze security features", "command": "", "reference": "", "category": true, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "id": "usernameAndPassword", "title": "Username & Password", "description": "Explore Username & Password techniques", "command": "", "reference": "", "category": true, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "id": "mfa", "title": "MFA", "description": "Multi-Factor Authentication techniques", "command": "", "reference": "", "category": true, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "id": "entraId", "title": "Entra ID (Azure AD)", "description": "Explore Entra ID techniques", "command": "", "reference": "", "category": true, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "id": "azureServices", "title": "Azure Services", "description": "Explore Azure Services", "command": "", "reference": "", "category": true, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "source": "root", "target": "usernamePassword" }, "classes": "edge" },
        { "data": { "source": "usernamePassword", "target": "looting" }, "classes": "edge" },
        { "data": { "source": "usernamePassword", "target": "portals" }, "classes": "edge" },
        { "data": { "source": "usernamePassword", "target": "reconnaissance" }, "classes": "edge" },
        { "data": { "source": "usernamePassword", "target": "securityFeature" }, "classes": "edge" },
        { "data": { "source": "usernamePassword", "target": "usernameAndPassword" }, "classes": "edge" },
        { "data": { "source": "usernameAndPassword", "target": "mfa" }, "classes": "edge" },
        { "data": { "source": "usernamePassword", "target": "entraId" }, "classes": "edge" },
        { "data": { "source": "usernamePassword", "target": "azureServices" }, "classes": "edge" }
    ],
    "looting": [
        { "data": { "id": "dumpAzCredentials", "title": "Dump AZ Credentials", "description": "Dumps all available credentials from an Azure subscription. Pipe to Out-Gridview or Export-CSV for easier parsing.", "command": "Get-AzPasswords -Verbose | Out-GridView", "reference": "https://github.com/NetSPI/MicroBurst/blob/master/Az/Get-AzPasswords.ps1", "category": false, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "id": "sharePointInfo", "title": "SharePoint Information", "description": "Retrieves SharePoint Online (SPO) service information using Azure AD Internals.", "command": "Get-AADIntSPOServiceInformation", "reference": "https://aadinternals.com/aadinternals/#get-aadintsposerviceinformation-a", "category": false, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "id": "oneDriveDownload", "title": "Download Files from OneDrive", "description": "Download Files from accees OneDrive", "command": "Get-AADIntOneDriveFiles -OneDriveSettings $os | Format-Table", "reference": "https://aadinternals.com/aadinternals/#get-aadintonedrivefiles-o", "category": false, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "id": "openOwa", "title": "Open OWA in browser", "description": "Opens OWA in a browser control window as the given user.", "command": "Open-AADIntOWA", "reference": "https://aadinternals.com/aadinternals/#open-aadintowa-o", "category": false, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "id": "readMails", "title": "Read User Mails", "description": "Read user mails via powershell garphapi SDK.", "command": "Get-MgUserMessage -UserId <user-id> | ft", "reference": "https://learn.microsoft.com/ja-jp/powershell/microsoftgraph/navigating?view=graph-powershell-1.0", "category": false, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "source": "looting", "target": "dumpAzCredentials" }, "classes": "edge" },
        { "data": { "source": "looting", "target": "readMails" }, "classes": "edge" },
        { "data": { "source": "looting", "target": "sharePointInfo" }, "classes": "edge" },
        { "data": { "source": "looting", "target": "openOwa" }, "classes": "edge" },
        { "data": { "source": "looting", "target": "oneDriveDownload" }, "classes": "edge" }
    ],
    "securityFeature": [
        { "data": { "id": "servicePlans", "title": "Get Service Plans", "description": "This function returns information about tenant’s service plans, such as name, id, status, and when first assigned.", "command": "Get-AADIntServicePlans | Format-Table", "reference": "https://aadinternals.com/aadinternals/#get-aadintserviceplans-a", "category": false, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "id": "getCaPolicies", "title": "Get CA Policies", "description": "Using PowerShell to export CA Policies", "command": "Get-AzureADMSConditionalAccessPolicy", "reference": "https://learn.microsoft.com/en-us/powershell/module/azuread/get-azureadmsconditionalaccesspolicy?view=azureadps-2.0-preview", "category": false, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "id": "listCaPolicies", "title": "Get Conditional Access Policies", "description": "Shows conditional access policies.", "command": "Get-AADIntConditionalAccessPolicies", "reference": "https://aadinternals.com/aadinternals/#get-aadintconditionalaccesspolicies-a", "category": false, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "source": "securityFeature", "target": "getCaPolicies" }, "classes": "edge" },
        { "data": { "source": "securityFeature", "target": "listCaPolicies" }, "classes": "edge" },
        { "data": { "source": "securityFeature", "target": "servicePlans" }, "classes": "edge" }
    ],
    "mfa": [
        { "data": { "id": "mfaSweep", "title": "MFA Sweep", "description": "A tool to help security testers discover which multi-factor authentication (MFA) methods are enabled and enforced for Azure users. It can test for MFA via phone call, SMS, or app notification.", "command": "Invoke-MFASweep -Username <UserName> -Password <Password>", "reference": "https://github.com/dafthack/MFASweep", "category": false, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "source": "mfa", "target": "mfaSweep" }, "classes": "edge" }
    ],
    "portals": [
        { "data": { "id": "msportals", "title": "msportals", "description": "Microsoft Administrator Sites, Training, and Licensing Resources", "command": "Check different portals to check if you have access to something interesting.", "reference": "https://msportals.io/", "category": false, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "source": "portals", "target": "msportals" }, "classes": "edge" }
    ],
    "reconnaissance": [
        { "data": { "id": "listTenants", "title": "List Tenants", "description": "Lists all Azure AD tenants the user has access to.", "command": "Get-AADIntAzureTenants", "reference": "https://aadinternals.com/aadinternals/#get-aadintazuretenants-ac", "category": false, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "id": "tenantRecon", "title": "Tenant Recon", "description": "Starts tenant recon of Azure AD tenant.", "command": "Invoke-AADIntReconAsInsider", "reference": "https://aadinternals.com/aadinternals/#invoke-aadintreconasinsider-ac", "category": false, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "id": "companyInformation", "title": "Company Information", "description": "This function returns details about the tenant’s company information.", "command": "Get-AADIntCompanyInformation", "reference": "https://aadinternals.com/aadinternals/#get-aadintcompanyinformation-a", "category": false, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "id": "tenantDetails", "title": "Details about tenant", "description": "This function returns details for the given tenant.", "command": "Get-AADIntTenantDetails", "reference": "https://aadinternals.com/aadinternals/#get-aadinttenantdetails-a", "category": false, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "id": "getTenantId", "title": "Get Tenant ID", "description": "This function returns tenant id for the given user, domain, or Access Token.", "command": "Get-AADIntTenantID -Domain <Domain>", "reference": "https://aadinternals.com/aadinternals/#get-aadinttenantid", "category": false, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "id": "azureadConnect", "title": "Azure AD Connect", "description": "", "command": "", "reference": "", "category": true, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "source": "reconnaissance", "target": "listTenants" }, "classes": "edge" },
        { "data": { "source": "reconnaissance", "target": "tenantRecon" }, "classes": "edge" },
        { "data": { "source": "reconnaissance", "target": "companyInformation" }, "classes": "edge" },
        { "data": { "source": "reconnaissance", "target": "tenantDetails" }, "classes": "edge" },
        { "data": { "source": "reconnaissance", "target": "azureadConnect" }, "classes": "edge" },
        { "data": { "source": "reconnaissance", "target": "getTenantId" }, "classes": "edge" }
    ],
    "azureadConnect": [
        { "data": { "id": "connectStatus", "title": "Connect AD Status", "description": "Shows the status of Azure AD Connect (AAD Connect).", "command": "Get-AADIntAADConnectStatus", "reference": "https://aadinternals.com/aadinternals/#get-aadintaadconnectstatus-z", "category": false, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "id": "syncConfig", "title": "Get Sync Configuration", "description": "This function returns synchronisation details.", "command": "Get-AADIntSyncConfiguration", "reference": "https://aadinternals.com/aadinternals/#get-aadintsyncconfiguration-a", "category": false, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "source": "azureadConnect", "target": "connectStatus" }, "classes": "edge" },
        { "data": { "source": "azureadConnect", "target": "syncConfig" }, "classes": "edge" }
    ],
    "entraId": [
        { "data": { "id": "groups", "title": "Groups", "description": "", "command": "", "reference": "", "category": true, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "id": "servicePrincipals", "title": "Service Principals", "description": "", "command": "", "reference": "", "category": true, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "id": "user", "title": "User", "description": "", "command": "", "reference": "", "category": true, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "id": "roles", "title": "Roles", "description": "", "command": "", "reference": "", "category": true, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "id": "dynamicGroup", "title": "Dynamic Group", "description": "", "command": "", "reference": "", "category": true, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "source": "entraId", "target": "groups" }, "classes": "edge" },
        { "data": { "source": "entraId", "target": "servicePrincipals" }, "classes": "edge" },
        { "data": { "source": "entraId", "target": "user" }, "classes": "edge" },
        { "data": { "source": "entraId", "target": "roles" }, "classes": "edge" },
        { "data": { "source": "entraId", "target": "dynamicGroup" }, "classes": "edge" }
    ],
    "azureServices": [
        { "data": { "id": "acr", "title": "Azure Container Registry (ACR)", "description": "", "command": "", "reference": "", "category": true, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "id": "applicationProxy", "title": "Application Proxy", "description": "", "command": "", "reference": "", "category": true, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "id": "automationAccount", "title": "Automation Account", "description": "", "command": "", "reference": "", "category": true, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "id": "azureAppService", "title": "Azure App Service", "description": "", "command": "", "reference": "", "category": true, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "id": "blobStorage", "title": "Blob storage", "description": "", "command": "", "reference": "", "category": true, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "id": "keyVault", "title": "Key Vault", "description": "", "command": "", "reference": "", "category": true, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "id": "virtualMachine", "title": "Virtual Machine", "description": "", "command": "", "reference": "", "category": true, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "id": "bastion", "title": "Bastion", "description": "", "command": "", "reference": "", "category": true, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "id": "azureDevOps", "title": "Azure DevOps", "description": "", "command": "", "reference": "", "category": true, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "source": "azureServices", "target": "acr" }, "classes": "edge" },
        { "data": { "source": "azureServices", "target": "applicationProxy" }, "classes": "edge" },
        { "data": { "source": "azureServices", "target": "automationAccount" }, "classes": "edge" },
        { "data": { "source": "azureServices", "target": "azureAppService" }, "classes": "edge" },
        { "data": { "source": "azureServices", "target": "blobStorage" }, "classes": "edge" },
        { "data": { "source": "azureServices", "target": "keyVault" }, "classes": "edge" },
        { "data": { "source": "azureServices", "target": "virtualMachine" }, "classes": "edge" },
        { "data": { "source": "azureServices", "target": "bastion" }, "classes": "edge" },
        { "data": { "source": "azureServices", "target": "azureDevOps" }, "classes": "edge" }
    ],
    "dynamicGroup": [
        { "data": { "id": "dynamicGroupsInfo", "title": "Dynamic Groups Information", "description": "Get groups that allow Dynamic membership", "command": "Get-AzureADMSGroup | 2{5_Group Types -eq 'DynamicMembership}", "reference": "https://github.com/Azure/azure-docs-powershell-azuread/blob/main/azureadps-2.0/AzureAD/Get-AzureADMSGroup.md", "category": false, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "source": "dynamicGroup", "target": "dynamicGroupsInfo" }, "classes": "edge" }
    ],
    "servicePrincipals": [
        { "data": { "id": "aadServicePrincipals", "title": "Azure AD service principals", "description": "Extracts Azure AD service principals.", "command": "Get-AADIntServicePrincipals", "reference": "https://aadinternals.com/aadinternals/#get-aadintserviceprincipals-a", "category": false, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "source": "servicePrincipals", "target": "aadServicePrincipals" }, "classes": "edge" }
    ],
    "groups": [
        { "data": { "id": "addMember", "title": "Add member", "description": "Add a member to a group.", "command": "az ad group member check --group < group_name> --member-id <member_id>", "reference": "https://learn.microsoft.com/en-us/cli/azure/ad/group/member?view=azure-cli-latest#az-ad-group-member-add", "category": false, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "source": "groups", "target": "addMember" }, "classes": "edge" }
    ],
    "roles": [
        { "data": { "id": "addRole", "title": "Add Role", "description": "Assign a role to a user.", "command": "Add-AzureADRole -Username <user>@<domain.tld> -Role <role_name>", "reference": "https://learn.microsoft.com/en-us/cli/azure/role/assignment?view=azure-cli-latest#az-role-assignment-create", "category": false, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "source": "roles", "target": "addRole" }, "classes": "edge" }
    ],
    "azureDevOps": [
        { "data": { "id": "cicdSecrets", "title": "CI/CD Secrets", "description": "Extract secrets stored inside CI/CD environments by deploying malicious pipelines.", "command": "nord-stream.py devops -token \"<personal_token>\" --org <org> -list-secrets", "reference": "https://github.com/synacktiv/nord-stream", "category": false, "ifSuccussed": "Check the output to gain credentials" }, "classes": "node-normal" },
        { "data": { "source": "azureDevOps", "target": "cicdSecrets" }, "classes": "edge" }
    ],
    "bastion": [
        { "data": { "id": "accessViaShareableLink", "title": "Access via ShareableLink", "description": "Access Azure Bastion via a shareable link.", "command": "Invoke-AzRestBastionShareableLink", "reference": "https://learn.microsoft.com/en-us/azure/bastion/bastion-shareable-link", "category": false, "ifSuccussed": "Check your access to bastion after successful execution" }, "classes": "node-normal" },
        { "data": { "source": "bastion", "target": "accessViaShareableLink" }, "classes": "edge" }
    ],
    "automationAccount": [
        { "data": { "id": "getAutomationVariables", "title": "Get Azure Automation variables", "description": "The Get-AzAutomationVariable cmdlet gets one or more Azure Automation variables.", "command": "Get-AzAutomationAccount | Get-AzAutomation<Variable/Credential/Connection/Certificate>", "reference": "https://github.com/Azure/azure-powershell/blob/main/src/Automation/Automation/help/Get-AzAutomationVariable.md", "category": false, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "source": "automationAccount", "target": "getAutomationVariables" }, "classes": "edge" }
    ],
    "virtualMachine": [
        { "data": { "id": "listVirtualMachines", "title": "List Virtual Machines", "description": "Lists all virtual machines in the subscription.", "command": "az vm list --output table", "reference": "https://learn.microsoft.com/en-us/cli/azure/vm?view=azure-cli-latest#az-vm-list", "category": false, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "id": "checkVmAccess", "title": "Check VM Access", "description": "Verify if you have sufficient permissions to execute commands. Typically, you need Virtual Machine Contributor or higher.", "command": "az role assignment list --scope /subscriptions/<subscription-id>/resourceGroups/<resource-group>/providers/Microsoft.Compute/virtualMachines/<vm-name>", "reference": "https://learn.microsoft.com/en-us/cli/azure/role/assignment?view=azure-cli-latest#az-role-assignment-list", "category": false, "ifSuccussed": "" }, "classes": "node-normal" },
        { "data": { "id": "executeCommandOnVm", "title": "Execute Command on VM", "description": "Use az vm run-command to execute a command on the VM.", "command": "az vm run-command invoke --command-id RunShellScript --name <vm-name> --resource-group <resource-group> --scripts <InsertYourCommandHere>", "reference": "https://learn.microsoft.com/en-us/cli/azure/vm/run-command?view=azure-cli-latest#az-vm-run-command-invoke", "category": false, "ifSuccussed": "You have code execution on VM" }, "classes": "node-normal" },
        { "data": { "source": "virtualMachine", "target": "listVirtualMachines" }, "classes": "edge" },
        { "data": { "source": "listVirtualMachines", "target": "checkVmAccess" }, "classes": "edge" },
        { "data": { "source": "checkVmAccess", "target": "executeCommandOnVm" }, "classes": "edge" }
    ],
    "blobStorage": [
    { "data": { "id": "listStorageAccounts", "title": "List Storage Accounts", "description": "Lists all storage accounts in the subscription.", "command": "az storage account list --output table", "reference": "https://learn.microsoft.com/en-us/cli/azure/storage/account?view=azure-cli-latest#az-storage-account-list", "category": false, "ifSuccussed": "" }, "classes": "node-normal" },
    { "data": { "id": "listContainers", "title": "List Containers", "description": "Lists all containers in the specified storage account.", "command": "az storage container list --account-name <storage-account-name> --account-key <account-key>", "reference": "https://learn.microsoft.com/en-us/cli/azure/storage/container?view=azure-cli-latest#az-storage-container-list", "category": false, "ifSuccussed": "" }, "classes": "node-normal" },
    { "data": { "id": "listBlobsInContainer", "title": "List Blobs in a Container", "description": "Lists all blobs in the specified container.", "command": "az storage blob list --account-name <storage-account-name> --account-key <account-key> --container-name <container-name> --output table", "reference": "https://learn.microsoft.com/en-us/cli/azure/storage/blob?view=azure-cli-latest#az-storage-blob-list", "category": false, "ifSuccussed": "" }, "classes": "node-normal" },
    { "data": { "id": "downloadBlobs", "title": "Download Blobs", "description": "Downloads a blob to a local file path.", "command": "az storage blob download --account-name <storage-account-name> --account-key <account-key> --container-name <container-name> --name <blob-name> --file <local-file-path>", "reference": "https://learn.microsoft.com/en-us/cli/azure/storage/blob?view=azure-cli-latest#az-storage-blob-download", "category": false, "ifSuccussed": "" }, "classes": "node-normal" },
    { "data": { "source": "blobStorage", "target": "listStorageAccounts" }, "classes": "edge" },
    { "data": { "source": "listStorageAccounts", "target": "listContainers" }, "classes": "edge" },
    { "data": { "source": "listContainers", "target": "listBlobsInContainer" }, "classes": "edge" },
    { "data": { "source": "listBlobsInContainer", "target": "downloadBlobs" }, "classes": "edge" }
],
"keyVault": [
    { "data": { "id": "listKeyVaults", "title": "List Key Vaults", "description": "Lists all Key Vaults in the subscription.", "command": "Get-AzKeyVault", "reference": "https://learn.microsoft.com/en-us/powershell/module/az.keyvault/get-azkeyvault", "category": false, "ifSuccussed": "" }, "classes": "node-normal" },
    { "data": { "id": "listKeyVaultSecrets", "title": "List Key Vault Secrets", "description": "Lists all secrets in the specified Key Vault.", "command": "Get-AzKeyVaultSecret -VaultName <vault_name>", "reference": "https://learn.microsoft.com/en-us/powershell/module/az.keyvault/get-azkeyvaultsecret", "category": false, "ifSuccussed": "" }, "classes": "node-normal" },
    { "data": { "id": "getKeyVaultSecretPlainText", "title": "Get Key Vault Secret as Plain Text", "description": "Gets the specified secret from the Key Vault as plain text.", "command": "Get-AzKeyVaultSecret -VaultName <vault_name> -Name <secret_name> -AsPlainText", "reference": "https://learn.microsoft.com/en-us/powershell/module/az.keyvault/get-azkeyvaultsecret", "category": false, "ifSuccussed": "" }, "classes": "node-normal" },
    { "data": { "source": "keyVault", "target": "listKeyVaults" }, "classes": "edge" },
    { "data": { "source": "listKeyVaults", "target": "listKeyVaultSecrets" }, "classes": "edge" },
    { "data": { "source": "listKeyVaultSecrets", "target": "getKeyVaultSecretPlainText" }, "classes": "edge" }
],
"azureAppService": [
    { "data": { "id": "createRemoteConnection", "title": "Create Remote Connection", "description": "Creates a remote connection to the Azure Web App.", "command": "az webapp create-remote-connection --subscription <subscription_id> --resource-group <resource_group> -n <app_name>", "reference": "https://learn.microsoft.com/en-us/cli/azure/webapp?view=azure-cli-latest#az-webapp-create-remote-connection", "category": false, "ifSuccussed": "" }, "classes": "node-normal" },
    { "data": { "id": "configLocalGit", "title": "Config Local Git", "description": "Configures local git for deployment to the Azure Web App.", "command": "az webapp deployment source config-local-git --resource-group <resource_group> -n <app_name>", "reference": "https://learn.microsoft.com/en-us/cli/azure/webapp/deployment/source?view=azure-cli-latest#az-webapp-deployment-source-config-local-git", "category": false, "ifSuccussed": "" }, "classes": "node-normal" },
    { "data": { "id": "listPublishingProfiles", "title": "List Publishing Profiles", "description": "Lists publishing profiles for the Azure Web App.", "command": "az webapp deployment list-publishing-profiles --resource-group <resource_group> -n <app_name>", "reference": "https://learn.microsoft.com/en-us/cli/azure/webapp/deployment?view=azure-cli-latest#az-webapp-deployment-list-publishing-profiles", "category": false, "ifSuccussed": "" }, "classes": "node-normal" },
    { "data": { "id": "listConnectionStrings", "title": "List Connection Strings", "description": "Lists connection strings for the Azure Web App.", "command": "az webapp config connection-string list --name <app_name> --resource-group <resource_group>", "reference": "https://learn.microsoft.com/en-us/cli/azure/webapp/config/connection-string?view=azure-cli-latest#az-webapp-config-connection-string-list", "category": false, "ifSuccussed": "" }, "classes": "node-normal" },
    { "data": { "source": "azureAppService", "target": "createRemoteConnection" }, "classes": "edge" },
    { "data": { "source": "azureAppService", "target": "configLocalGit" }, "classes": "edge" },
    { "data": { "source": "azureAppService", "target": "listPublishingProfiles" }, "classes": "edge" },
    { "data": { "source": "azureAppService", "target": "listConnectionStrings" }, "classes": "edge" }
],
"acr": [
    { "data": { "id": "listAcr", "title": "List ACR", "description": "Lists all Azure Container Registries (ACR).", "command": "az acr list --output table", "reference": "https://learn.microsoft.com/en-us/cli/azure/acr?view=azure-cli-latest#az-acr-list", "category": false, "ifSuccussed": "" }, "classes": "node-normal" },
    { "data": { "id": "getAcr", "title": "Get ACR", "description": "Gets details of an Azure Container Registry (ACR).", "command": "Get-AzACR -username <username> -password <password> -registry <name>.azurecr.io", "reference": "https://learn.microsoft.com/en-us/powershell/module/az.containerregistry/get-azcontainerregistry?view=azps-7.1.0", "category": false, "ifSuccussed": "" }, "classes": "node-normal" },
    { "data": { "source": "acr", "target": "listAcr" }, "classes": "edge" },
    { "data": { "source": "acr", "target": "getAcr" }, "classes": "edge" }
]



}
